{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["COWTRIAL_ABI","METAMASK_PUBLIC_KEY","process","METAMASK_PRIVATE_KEY","App","props","state","account","value","attributeValue","ownerAccount","Attributes","mintNLIS","mintPIC","mintDNAHASH","mintADDRESS","handleChange","bind","handleSubmit","handleMintInputChange","this","loadBlockchainData","document","body","style","backgroundColor","console","log","a","detectEthereumProvider","provider","web3","Web3","window","ethereum","request","method","getAccount","setState","CowContract","eth","Contract","contract","tokenID","methods","TokenIDToOwner","call","err","res","owner","event","getTokenOwner","parseInt","target","getAttributes","attributes","NLIS","PIC","DNAHASH","OWNER","preventDefault","TokenIDToDNAHash","DNAHash","DNAHashToAttributes","name","mintNFT","send","from","to","gasPrice","mint","className","onSubmit","type","onChange","handleAttributes","handleCreation","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c24862e.chunk.js","sourcesContent":["export const COWTRIAL_ADDRESS = \"0x62Ae2D6804496CB238288BF47C3bC5912025461F\";\nexport const COWTRIAL_ABI = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_ownerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"cowCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"DNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToAttributes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAData\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAData\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"NLIS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToDNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"PIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToDNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToNLIS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"TokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"TokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"_DNAHashToTokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"_NLISToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"cowStruct\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"Owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_claimant\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getBalanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"DNAData\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"hashDNA\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_claimant\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isOwnerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"ownerAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mintNFT\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"sendCow\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenCounter\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"setNewIdentity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"tokenCounter\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"tokensOfOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]","import React, { Component } from 'react'\nimport {COWTRIAL_ABI, COWTRIAL_ADDRESS} from './config'\nimport Web3 from 'web3'\nimport './App.css'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { thistle } from 'color-name';\n\nconst METAMASK_PUBLIC_KEY = process.env.METAMASK_PUBLIC_KEY;\nconst METAMASK_PRIVATE_KEY = process.env.METAMASK_PRIVATE_KEY;\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n    \n    this.state = {value: ''}\n    this.state = {attributeValue: ''}\n    this.state = {ownerAccount: ''}\n    this.state = {Attributes: []}\n    this.state = {mintNLIS: ''}\n    this.state = {mintPIC: ''}\n    this.state = {mintDNAHASH: ''}\n    this.state = {mintADDRESS: ''}\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleMintInputChange = this.handleMintInputChange.bind(this)\n\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData()\n    document.body.style.backgroundColor = \"darkgrey\"\n    console.log(METAMASK_PRIVATE_KEY, METAMASK_PUBLIC_KEY)\n  }\n\n  async loadBlockchainData() {\n    const provider = await detectEthereumProvider();\n    //console.log(provider)\n    const web3 = new Web3(provider);\n    let getAccount = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    this.setState({account: getAccount[0]});\n    //console.log(this.state.account)\n\n    const CowContract = new web3.eth.Contract(COWTRIAL_ABI, COWTRIAL_ADDRESS);\n    \n    this.setState({contract: CowContract});\n    \n  }\n    \n  async getTokenOwner(tokenID) {\n    //console.log(this.state)\n    let owner;\n    if (tokenID == \"\") {\n      return 0\n    }\n    owner = await this.state.contract.methods.TokenIDToOwner(tokenID).call(function (err, res) {\n    if (err) {\n      console.log(\"An Error has occured\", err);\n      return\n      }\n      console.log(\"The Owner is\", res);\n      //owner = res\n    })\n\n    //console.log(owner)\n    return owner\n\n  }\n\n  async handleChange(event) {\n    let owner;\n    try {\n      owner = await this.getTokenOwner(parseInt(event.target.value))\n    } catch (err) {\n      console.log(err)\n    }\n    console.log(owner)\n    this.setState({ownerAccount: owner})\n  }\n\n  async handleAttributes(event) {\n    \n    let attributes;\n    try {\n      attributes = await this.getAttributes(parseInt(event.target.value))\n    } catch (err) {\n      console.log(err)\n    }\n    this.setState({NLIS: attributes[0]})\n    this.setState({PIC: attributes[1]})\n    this.setState({DNAHASH: attributes[2]})\n    this.setState({OWNER: attributes[3]})\n    \n    \n\n  }\n\n  handleSubmit(event) {\n    //alert(\"The owner is \" + this.state.ownerAccount);\n    event.preventDefault()\n  }\n\n  async getAttributes(tokenID) {\n    let attributes;\n    if (tokenID == \"\") {\n      return 0;\n    }\n\n    const DNAHash = await this.state.contract.methods.TokenIDToDNAHash(tokenID).call(function (err, res) {\n      if (err) {\n        console.log(\"An Error has occured\", err);\n        return\n        }\n        console.log(\"The DNAHash is\", res);\n        //owner = res\n      })\n    \n\n\n    attributes = await this.state.contract.methods.DNAHashToAttributes(DNAHash).call(function (err, res) {\n      if (err) {\n        console.log(\"An Error has occured\", err);\n        return\n        }\n        console.log(\"The Owner is\", res);\n        //owner = res\n      })\n      \n      return attributes\n  }\n\n  handleMintInputChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  async handleCreation(event){\n    const NLIS = this.state.mintNLIS;\n    const PIC = this.state.mintPIC;\n    const DNAHash = this.state.mintDNAHASH;\n    const owner = this.state.mintADDRESS;\n\n    const mint = await this.state.contract.methods.mintNFT(NLIS, PIC, DNAHash, owner).send({\n      from: this.state.account,\n      to: \"0x62Ae2D6804496CB238288BF47C3bC5912025461F\",\n      gasPrice: '20000000000'\n    })\n    console.log(mint)\n    \n  }\n\n \n\n  render() {\n    return (\n      <div className=\"container\">\n        \n        <h1>Centric Trial Contract</h1>\n        <p>Your MetaMask account: {this.state.account}</p>\n        <div className=\"getOwners\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              TokenID:\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\"/>\n          </form>\n          <p>Token Owner: {this.state.ownerAccount}</p>\n\n        </div>\n        <div className=\"getOwners\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Get Attributes from tokenID:\n              <input type=\"text\" value={this.state.attributeValue} onChange={this.handleAttributes.bind(this)}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\"/>\n          </form>\n          <p>ATTRIBUTES</p>\n          <p>NLIS: {this.state.NLIS} </p>\n          <p>PIC: {this.state.PIC}</p>\n          <p>DNAHASH: {this.state.DNAHASH}</p>\n          <p>OWNER: {this.state.OWNER}</p>\n        </div>\n        <div>\n          <h3>MINT TOKEN</h3>\n          <form onSubmit={this.handleCreation.bind(this)}>\n            <label>\n              NLIS:  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <input name=\"mintNLIS\" type=\"text\" value={this.state.mintNLIS} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              PIC: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;\n              <input name=\"mintPIC\" type=\"text\" value={this.state.mintPIC} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              DNAHASH:\n              <input name=\"mintDNAHASH\" type=\"text\" value={this.state.mintDNAHASH} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              OWNER: &nbsp; &nbsp;&nbsp;\n              <input name=\"mintADDRESS\" type=\"text\" value={this.state.mintADDRESS} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <input type=\"submit\" value=\"MINT\"/>\n          </form>\n\n        </div>\n\n\n      </div>\n    );\n    }\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}