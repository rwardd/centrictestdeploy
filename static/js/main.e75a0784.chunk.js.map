{"version":3,"sources":["config.js","NFTFetcher.js","App.js","reportWebVitals.js","index.js"],"names":["COWTRIAL_ADDRESS","COWTRIAL_ABI","NFTFetcher","props","state","account","AssetAttributes","this","loadBlockchainData","a","detectEthereumProvider","provider","web3","Web3","window","ethereum","request","method","getAccount","setState","console","log","CowContract","eth","Contract","contract","tokenID","getAttributes","parseInt","attributes","methods","tokensOfOwner","call","err","res","assets","assetJSON","i","length","handleAttributes","returnedAssets","text","nft1","obj","JSON","parse","push","TokenIDToDNAHash","DNAHash","DNAHashToAttributes","className","onClick","getAllNFTs","bind","map","attribute","index","Number","TokenID","NLIS","PIC","Owner","Component","METAMASK_PUBLIC_KEY","process","METAMASK_PRIVATE_KEY","App","value","attributeValue","ownerAccount","Attributes","mintNLIS","mintPIC","mintDNAHASH","mintADDRESS","sendAddress","sendTokenID","handleChange","handleSubmit","handleMintInputChange","TokenIDToOwner","owner","event","getTokenOwner","target","DNAHASH","OWNER","preventDefault","name","mintNFT","send","from","to","gasPrice","mint","DNAtoHash","data","hashDNA","hashed","HashedDNA","toAddress","fromAddress","tokenId","sendCow","href","onSubmit","type","onChange","handleCreation","handleDNAHash","handleSend","handleSendButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e75a0784.chunk.js","sourcesContent":["export const COWTRIAL_ADDRESS = \"0x62Ae2D6804496CB238288BF47C3bC5912025461F\";\nexport const COWTRIAL_ABI = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"_ownerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"cowCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"DNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToAttributes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAData\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAData\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"DNAHashToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"NLIS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToDNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLISID\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"NLISToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"PIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToDNAHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToNLIS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"TokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"TokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokenIDToPIC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"_DNAHashToTokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"_NLISToTokenID\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"cowStruct\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"Owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_claimant\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getBalanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"DNAData\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"hashDNA\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_claimant\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isOwnerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"ownerAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mintNFT\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"sendCow\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_tokenCounter\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_NLIS\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_PIC\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_DNAHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"setNewIdentity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"tokenCounter\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"tokensOfOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]","import React, { Component } from 'react'\nimport {COWTRIAL_ABI, COWTRIAL_ADDRESS} from './config'\nimport Web3 from 'web3'\nimport App from './App.js'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { thistle } from 'color-name';\n\n\nclass NFTFetcher extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {account: ''}\n        this.state = {\n            AssetAttributes: []\n        }\n    }\n\n    componentWillMount() {\n        this.loadBlockchainData()\n        \n        \n    }\n\n    \n    \n    async loadBlockchainData() {\n        const provider = await detectEthereumProvider();\n        //console.log(provider)\n        const web3 = new Web3(provider);\n        let getAccount = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        this.setState({account: getAccount[0]});\n        console.log(this.state.account)\n\n    \n        const CowContract = new web3.eth.Contract(COWTRIAL_ABI, COWTRIAL_ADDRESS)\n        \n        this.setState({contract: CowContract});\n        console.log(this.state.contract)\n        \n    }\n\n    async handleAttributes(tokenID) {\n    \n        let attributes;\n        try {\n          attributes = await this.getAttributes(parseInt(tokenID))\n        } catch (err) {\n          console.log(err)\n        }\n\n        console.log(attributes)\n        return attributes\n    \n      }\n\n    \n\n    async getAllNFTs() {\n        let assets;\n        assets = await this.state.contract.methods.tokensOfOwner(this.state.account).call(function (err, res) {\n        if (err) {\n            console.log(\"An Error has occured\", err);\n            return\n        }\n        console.log(\"The Tokens are\", res);\n              //owner = res\n        });\n\n\n        console.log(\"assets:\" + assets)\n        //this.setState({Assets: assets})\n        let returnedAssets;\n        let assetJSON = [];\n        for (let i = 0; i < assets.length; i++) {\n            returnedAssets = await this.handleAttributes(assets[i]);\n            let text = \"Asset\" + (i+1);\n            console.log(text)\n            let nft1 = `{\"Number\": ${i+1}, \"NLIS\": \"${returnedAssets[0]}\", \n                \"PIC\": \"${returnedAssets[1]}\",  \n                \"DNAHash\": \"${returnedAssets[2]}\",\n                \"Owner\": \"${returnedAssets[3]}\",\n                \"TokenID\": \"${assets[i]}\"\n            }`;\n            console.log(nft1)\n            const obj = JSON.parse(nft1);\n            assetJSON.push(obj)\n           \n        }\n        console.log(assetJSON)\n        this.setState({AssetAttributes: assetJSON})\n        console.log(this.state.AssetAttributes)\n\n    }\n\n    async getAttributes(tokenID) {\n        let attributes;\n        if (tokenID == \"\") {\n          return 0;\n        }\n    \n        const DNAHash = await this.state.contract.methods.TokenIDToDNAHash(tokenID).call(function (err, res) {\n          if (err) {\n            console.log(\"An Error has occured\", err);\n            return\n            }\n            //console.log(\"The DNAHash is\", res);\n            //owner = res\n          })\n        \n    \n    \n        attributes = await this.state.contract.methods.DNAHashToAttributes(DNAHash).call(function (err, res) {\n          if (err) {\n            console.log(\"An Error has occured\", err);\n            return\n            }\n            //console.log(\"The Owner is\", res);\n            //owner = res\n          })\n          \n        return attributes\n    }\n    \n    \n\n    render() {\n        return (\n            <div className=\"container1\">\n                <h1>MY ASSETS:</h1>\n                <div className=\"assetButton\">\n                <button onClick={this.getAllNFTs.bind(this)}>Get My Assets</button>\n                </div>\n                <div>\n                    {this.state.AssetAttributes.map((attribute, index)=>(\n                        <p key={index}>\n                            Number: {attribute.Number} \n                            <br />\n                            TokenID: {attribute.TokenID}\n                            <br />\n                            NLIS: {attribute.NLIS}\n                            <br />\n                            PIC: {attribute.PIC}\n                            <br/>\n                            DNAHash: {attribute.DNAHash}\n                            <br/>\n                            Owner: {attribute.Owner}\n                            <br />\n                            ------------------------------------------------------------------------------------------------------------\n                        </p>\n                        \n                    ))}\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default NFTFetcher;\n","import React, { Component } from 'react'\nimport {COWTRIAL_ABI, COWTRIAL_ADDRESS} from './config'\nimport Web3 from 'web3'\nimport './App.css'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { thistle } from 'color-name';\nimport NFTFetcher from './NFTFetcher';\n\nconst METAMASK_PUBLIC_KEY = process.env.METAMASK_PUBLIC_KEY;\nconst METAMASK_PRIVATE_KEY = process.env.METAMASK_PRIVATE_KEY;\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n    \n    this.state = {value: ''}\n    this.state = {attributeValue: ''}\n    this.state = {ownerAccount: ''}\n    this.state = {Attributes: []}\n    this.state = {mintNLIS: ''}\n    this.state = {mintPIC: ''}\n    this.state = {mintDNAHASH: ''}\n    this.state = {mintADDRESS: ''}\n    this.state = {sendAddress: ''}\n    this.state = {sendTokenID: ''}\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleMintInputChange = this.handleMintInputChange.bind(this)\n\n  }\n\n  componentWillMount() {\n    this.loadBlockchainData()\n    //document.body.style.backgroundColor = \"darkgrey\"\n    console.log(METAMASK_PRIVATE_KEY, METAMASK_PUBLIC_KEY)\n  }\n\n  async loadBlockchainData() {\n    const provider = await detectEthereumProvider();\n    //console.log(provider)\n    const web3 = new Web3(provider);\n    let getAccount = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    this.setState({account: getAccount[0]});\n    //console.log(this.state.account)\n\n    const CowContract = new web3.eth.Contract(COWTRIAL_ABI, COWTRIAL_ADDRESS);\n    \n    this.setState({contract: CowContract});\n    \n  }\n    \n  async getTokenOwner(tokenID) {\n    //console.log(this.state)\n    let owner;\n    if (tokenID == \"\") {\n      return 0\n    }\n    owner = await this.state.contract.methods.TokenIDToOwner(tokenID).call(function (err, res) {\n    if (err) {\n      console.log(\"An Error has occured\", err);\n      return\n      }\n      console.log(\"The Owner is\", res);\n      //owner = res\n    })\n\n    //console.log(owner)\n    return owner\n\n  }\n\n  async handleChange(event) {\n    let owner;\n    try {\n      owner = await this.getTokenOwner(parseInt(event.target.value))\n    } catch (err) {\n      console.log(err)\n    }\n    console.log(owner)\n    this.setState({ownerAccount: owner})\n  }\n\n  async handleAttributes(event) {\n    \n    let attributes;\n    try {\n      attributes = await this.getAttributes(parseInt(event.target.value))\n    } catch (err) {\n      console.log(err)\n    }\n    this.setState({NLIS: attributes[0]})\n    this.setState({PIC: attributes[1]})\n    this.setState({DNAHASH: attributes[2]})\n    this.setState({OWNER: attributes[3]})\n    \n    \n\n  }\n\n  handleSubmit(event) {\n    //alert(\"The owner is \" + this.state.ownerAccount);\n    event.preventDefault()\n  }\n\n  async getAttributes(tokenID) {\n    let attributes;\n    if (tokenID == \"\") {\n      return 0;\n    }\n\n    const DNAHash = await this.state.contract.methods.TokenIDToDNAHash(tokenID).call(function (err, res) {\n      if (err) {\n        console.log(\"An Error has occured\", err);\n        return\n        }\n        console.log(\"The DNAHash is\", res);\n        //owner = res\n      })\n    \n\n\n    attributes = await this.state.contract.methods.DNAHashToAttributes(DNAHash).call(function (err, res) {\n      if (err) {\n        console.log(\"An Error has occured\", err);\n        return\n        }\n        console.log(\"The Owner is\", res);\n        //owner = res\n      })\n      \n      return attributes\n  }\n\n  handleMintInputChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  async handleCreation(event){\n    const NLIS = this.state.mintNLIS;\n    const PIC = this.state.mintPIC;\n    const DNAHash = this.state.mintDNAHASH;\n    const owner = this.state.mintADDRESS;\n\n    const mint = await this.state.contract.methods.mintNFT(NLIS, PIC, DNAHash, owner).send({\n      from: this.state.account,\n      to: \"0x62Ae2D6804496CB238288BF47C3bC5912025461F\",\n      gasPrice: '20000000000'\n    })\n    console.log(mint)\n    \n  }\n\n  async handleDNAHash(event) {\n    \n    this.setState({DNAtoHash: event.target.value});\n  }\n\n  async hashDNA() {\n    const data = this.state.DNAtoHash\n    \n    const hashed = await this.state.contract.methods.hashDNA(data).call(function (err, res) {\n      if (err) {\n        console.log(\"An Error has occured\", err);\n        return\n        }\n        console.log(\"The Hash is\", res);\n        //owner = res\n      })\n\n    this.setState({HashedDNA: hashed})\n    \n\n  }\n  \n  handleSend(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    this.setState({\n      [name]: value\n    })\n    \n\n  }\n \n\n\n  async handleSendButton(event) {\n    const toAddress = this.state.sendAddress\n    const fromAddress = this.state.account\n    const tokenId = this.state.sendTokenID\n\n    const sendCow = await this.state.contract.methods.sendCow(fromAddress, toAddress, tokenId).send({\n      from: this.state.account,\n      to: \"0x62Ae2D6804496CB238288BF47C3bC5912025461F\",\n      gasPrice: '20000000000'\n    })\n\n\n  }\n  \n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"basics\">\n        <h1 className=\"heading\">Centric Trial Contract</h1>\n        <p>Your MetaMask account: {this.state.account}</p>\n        <p><a href=\"https://ropsten.etherscan.io/address/0x62Ae2D6804496CB238288BF47C3bC5912025461F\" target=\"_blank\">Contract on Etherscan</a></p>\n        <div className=\"getOwners\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              TokenID:\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\"/>\n          </form>\n          <p>Token Owner: {this.state.ownerAccount}</p>\n          \n        </div>\n        <div className=\"getOwners\">\n          <h4>ATTRIBUTES</h4>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Get Attributes from tokenID:\n              <input type=\"text\" value={this.state.attributeValue} onChange={this.handleAttributes.bind(this)}/>\n            </label>\n            <input type=\"submit\" value=\"Submit\"/>\n          </form>\n          \n          <p>NLIS: {this.state.NLIS} </p>\n          <p>PIC: {this.state.PIC}</p>\n          <p>DNAHASH: {this.state.DNAHASH}</p>\n          <p>OWNER: {this.state.OWNER}</p>\n        </div>\n        <div>\n          <h3>MINT TOKEN</h3>\n          <form onSubmit={this.handleCreation.bind(this)}>\n            <label>\n              NLIS:  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <input name=\"mintNLIS\" type=\"text\" value={this.state.mintNLIS} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              PIC: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;\n              <input name=\"mintPIC\" type=\"text\" value={this.state.mintPIC} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              DNAHASH:\n              <input name=\"mintDNAHASH\" type=\"text\" value={this.state.mintDNAHASH} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <label>\n              OWNER: &nbsp; &nbsp;&nbsp;\n              <input name=\"mintADDRESS\" type=\"text\" value={this.state.mintADDRESS} onChange={this.handleMintInputChange}/>\n            </label>\n            <br></br>\n            <input type=\"submit\" value=\"MINT\"/>\n          </form>\n\n        </div>\n        <div>\n\n            <br />\n            Hash DNA:\n            <input type=\"text\" value={this.state.DNAtoHash} onChange={this.handleDNAHash.bind(this)}/>\n            <br />\n            <button onClick={this.hashDNA.bind(this)}>HASH</button> \n            <br />\n            <br/>\n            <label>HASH RESULT:  {this.state.HashedDNA}</label>\n            \n\n        </div>\n        <div>\n          <br />\n          <h5>Send NFT</h5>\n          Send Address: &nbsp; &nbsp;\n          <input type=\"text\" name=\"sendAddress\" value={this.state.sendAddress} onChange={this.handleSend.bind(this)}/>\n          <br />\n          TokenID: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          <input type=\"text\" name=\"sendTokenID\" value={this.state.sendTokenID} onChange={this.handleSend.bind(this)}/>\n          <br/>\n          <button onClick={this.handleSendButton.bind(this)}>TRANSFER</button>\n          <br/>\n          <br/>\n          <br/>\n\n\n\n        </div>\n      </div>\n      <div className=\"basics\">\n        <NFTFetcher />\n      </div>\n       \n      </div>\n      \n    );\n    }\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NFTFetcher from './NFTFetcher';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}